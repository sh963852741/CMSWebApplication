@page
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@model CMSWebApplication.Pages.Notices.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Notice</h4>
<hr />
<div class="row">
    <div class="col-12">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="Notice.Title" class="form-label"></label>
                <input asp-for="Notice.Title" class="form-control" />
                <span asp-validation-for="Notice.Title" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Notice.Absract" class="form-label"></label>
                <input asp-for="Notice.Absract" class="form-control" />
                <span asp-validation-for="Notice.Absract" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Notice.CreatedOn" class="form-label"></label>
                <input asp-for="Notice.CreatedOn" class="form-control" />
                <span asp-validation-for="Notice.CreatedOn" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Notice.Importance" class="form-label"></label>
                <select asp-for="Notice.Importance" class="form-select">
                    @foreach(CMSWebApplication.Models.Importance importance in Enum.GetValues<CMSWebApplication.Models.Importance>())
                    {
                        <option value="@importance" >@importance.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Notice.Importance" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Notice.Display" class="form-label"></label>
                <select asp-for="Notice.Display" class="form-select">
                    <option value="@true" >1</option>
                    <option value="@false" >0</option>
                </select>
                <span asp-validation-for="Notice.Display" class="text-danger"></span>
            </div>
            <div class="mb-3 d-none">
                <label asp-for="Notice.HtmlText" class="form-label"></label>
                <input id="editor-html-content" asp-for="Notice.HtmlText" class="form-control" />
                <span asp-validation-for="Notice.HtmlText" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Notice.HtmlText" class="form-label"></label>
                <div id="editor-full-screen-container" class="border">
                    <div id="toolbar-container"></div>
                    <div id="editor-container"></div>
                </div>
            </div>
            
            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>
@section Links {
    <!-- 引入 css -->
<link href="https://unpkg.com/@@wangeditor/editor@latest/dist/css/style.css" rel="stylesheet">
}
@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<!-- 引入 js -->
<script src="https://unpkg.com/@@wangeditor/editor@latest/dist/index.js"></script>

<script>
    const { createEditor, createToolbar } = window.wangEditor
    let inputElement = document.getElementById("editor-html-content");

    // 编辑器配置
    const editorConfig = {}
    editorConfig.placeholder = '请输入内容'
    editorConfig.onChange = (editor) => {
        // 当编辑器选区、内容变化时，即触发
        console.log('content', editor.children)
        console.log('html', editor.getHtml())
        inputElement.value = editor.getHtml()
    }
    // 工具栏配置
    const toolbarConfig = {}

    // 创建编辑器
    const editor = createEditor({
        html: inputElement.value,
        selector: '#editor-container',
        config: editorConfig,
        mode: 'default' // 或 'simple' 参考下文
    })

    // 创建工具栏
    const toolbar = createToolbar({
      editor,
      selector: '#toolbar-container',
      config: toolbarConfig,
      mode: 'default' // 或 'simple' 参考下文
    })
</script>
}
